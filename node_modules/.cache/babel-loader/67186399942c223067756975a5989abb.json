{"ast":null,"code":"var _jsxFileName = \"/Users/kaylagraham/Desktop/Thinkful/react-playground-states/src/state-drills/Bomb.js\";\nimport React from 'react';\n\nclass Bomb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  } // using lifecycle method to register an interval when component mounts\n\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.interval = setInterval(() => {\n      console.log('setInterval');\n      let newCount = this.state.count;\n      this.setState({\n        count: count++\n      });\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.count));\n  }\n\n}\n\nexport default Bomb;","map":{"version":3,"sources":["/Users/kaylagraham/Desktop/Thinkful/react-playground-states/src/state-drills/Bomb.js"],"names":["React","Bomb","Component","constructor","props","state","count","componentDidMount","console","log","interval","setInterval","newCount","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH,GAN8B,CAO/B;;;AACAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChCH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIG,QAAQ,GAAG,KAAKP,KAAL,CAAWC,KAA1B;AACA,WAAKO,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAEA,KAAK;AADA,OAAd;AAGD,KAN0B,EAMxB,IANwB,CAA3B;AAOD;;AAEDQ,EAAAA,MAAM,GAAG;AACL,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKT,KAAL,CAAWC,KAAf,CADF,CADA;AAKH;;AAzB4B;;AA4BnC,eAAeL,IAAf","sourcesContent":["import React from 'react';\n\nclass Bomb extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            count: 0,\n        };\n    }\n    // using lifecycle method to register an interval when component mounts\n    componentDidMount() {\n        console.log('componentDidMount')\n        this.interval = setInterval(() => {\n          console.log('setInterval')\n          let newCount = this.state.count;\n          this.setState({\n            count: count++\n          })\n        }, 1000)\n      }\n\n      render() {\n          return (\n          <div>\n            <p>{this.state.count}</p>\n          </div>\n          );\n      }\n}\n\nexport default Bomb;"]},"metadata":{},"sourceType":"module"}