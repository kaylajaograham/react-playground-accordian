{"ast":null,"code":"var _jsxFileName = \"/Users/kaylagraham/Desktop/Thinkful/react-playground-states/src/state-drills/Bomb.js\";\nimport React from 'react';\n\nclass Bomb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  } // using lifecycle method to register an interval when component mounts\n\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.interval = setInterval(() => {\n      console.log('setInterval');\n      let newCount = this.state.count;\n      this.setState({\n        count: newCount + 1\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n    clearInterval(this.interval);\n  }\n\n  render() {\n    let tick = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"tick..\");\n    let tock = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"..tock..\");\n    let boom = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"BOOM!\");\n\n    if (this.state.count >= 8) {\n      return boom;\n      ;\n    } else if (this.state.count % 2 === 0) {\n      return tick;\n    } else {\n      return tock;\n    }\n  }\n\n}\n\nexport default Bomb;","map":{"version":3,"sources":["/Users/kaylagraham/Desktop/Thinkful/react-playground-states/src/state-drills/Bomb.js"],"names":["React","Bomb","Component","constructor","props","state","count","componentDidMount","console","log","interval","setInterval","newCount","setState","componentWillUnmount","clearInterval","render","tick","tock","boom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH,GAN8B,CAO/B;;;AACAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChCH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIG,QAAQ,GAAG,KAAKP,KAAL,CAAWC,KAA1B;AACA,WAAKO,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAEM,QAAQ,GAAG;AADN,OAAd;AAGD,KAN0B,EAMxB,IANwB,CAA3B;AAOD;;AAEDE,EAAAA,oBAAoB,GAAG;AACnBN,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAM,IAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACH,QAAIC,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAX;AACA,QAAIC,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX;AACA,QAAIC,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;;AAEJ,QAAI,KAAKd,KAAL,CAAWC,KAAX,IAAoB,CAAxB,EAA2B;AACrB,aAAOa,IAAP;AAAY;AAClB,KAFA,MAEM,IAAI,KAAKd,KAAL,CAAWC,KAAX,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAClC,aAAOW,IAAP;AACJ,KAFM,MAEA;AACH,aAAOC,IAAP;AACH;AACD;;AApC4B;;AAuCnC,eAAejB,IAAf","sourcesContent":["import React from 'react';\n\nclass Bomb extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            count: 0,\n        };\n    }\n    // using lifecycle method to register an interval when component mounts\n    componentDidMount() {\n        console.log('componentDidMount')\n        this.interval = setInterval(() => {\n          console.log('setInterval')\n          let newCount = this.state.count;\n          this.setState({\n            count: newCount + 1\n          })\n        }, 1000)\n      }\n\n      componentWillUnmount() {\n          console.log('componentWillUnmount')\n          clearInterval(this.interval);\n      }\n\n      render() {\n            let tick = <p>tick..</p>;\n            let tock = <p>..tock..</p>;\n            let boom = <p>BOOM!</p>;\n\n        if (this.state.count >= 8) {\n              return boom;;\n       } else if (this.state.count % 2 === 0) {\n            return tick;\n       } else {\n           return tock;\n       }\n      }\n}\n\nexport default Bomb;"]},"metadata":{},"sourceType":"module"}